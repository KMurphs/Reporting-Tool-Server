pipeline {
    agent any
    parameters {
        string(name: 'TAG', defaultValue: 'latest', description: '')
        string(name: 'APP_NAME', defaultValue: 'reporting-mysql', description: '')
        string(name: 'REGISTRY_HOST', defaultValue: 'cloud.canister.io:5000', description: '')
    }
    environment {
        REGISTRY_CREDS = credentials('canister-credentials')
        TEST_CONTAINER_NAME = "mysql_temp"

        //IMAGE_NAME = ${params.REGISTRY_HOST}/$REGISTRY_CREDS_USR/${params.APP_NAME}:${params.TAG}
    }
    stages {
        stage('Build and Run') { 
            steps {
                //sh 'docker build -t ${params.REGISTRY_HOST}/$REGISTRY_CREDS_USR/${params.APP_NAME}:${params.TAG} -f k8s_applications/mysql/mysql-image/Dockerfile k8s_applications/mysql/mysql-image/'
                sh 'docker run -p 63306:3306 --name $TEST_CONTAINER_NAME -e MYSQL_ROOT_PASSWORD=TestPassword! cloud.canister.io:5000/kmurphs/reporting-mysql'
                // sh 'echo "Registry user name is $REGISTRY_CREDS_USR"'
                // sh 'echo "Registry user password is $REGISTRY_CREDS_PSW"'
                // //sh 'echo "Image name is $IMAGE_NAME"'
                // echo "The Registry host is ${params.REGISTRY_HOST}"
                // echo "The app name is ${params.APP_NAME}"
                // echo "The tag is ${params.TAG}"
            }
        }
        stage('Test') { 
            steps {
                sh "./k8s_applications/jenkins/jenkins-utils/reporting-mysql-test.sh"
            }
        }
        stage('Clean Up') { 
            steps {
                sh "./k8s_applications/jenkins/jenkins-utils/reporting-mysql-clean.sh"
            }
        }
    }
}